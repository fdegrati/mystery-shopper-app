<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= formulario_nombre %> - Mystery Shopper</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    .radio-option { cursor: pointer; transition: all 0.2s; }
    .radio-option:hover { transform: translateY(-2px); box-shadow: 0 4px 12px rgba(0,0,0,0.1); }
    .radio-option.selected { border-color: #4F46E5; background-color: #EEF2FF; }
  </style>
</head>
<body class="bg-gray-50">
  <header class="bg-gradient-to-r from-indigo-600 to-purple-600 text-white shadow-lg">
    <div class="container mx-auto px-4 py-6">
      <h1 class="text-2xl font-bold"><%= formulario_nombre %></h1>
      <p class="text-indigo-100 mt-1"><%= cliente_nombre %><%= local_nombre ? ' - ' + local_nombre : '' %></p>
    </div>
  </header>

  <div class="container mx-auto px-4 py-6 max-w-4xl">
    <div class="mb-6">
      <span class="inline-flex items-center px-4 py-2 rounded-full text-sm font-medium <%= asignacion.estado === 'BORRADOR' ? 'bg-gray-200 text-gray-700' : asignacion.estado === 'ENVIADO' ? 'bg-blue-200 text-blue-700' : 'bg-green-200 text-green-700' %>">
        <%= asignacion.estado.replace(/_/g, ' ') %>
      </span>
      <% if (!puedeEditar) { %>
        <span class="ml-4 text-sm text-gray-600 bg-yellow-50 border border-yellow-200 px-4 py-2 rounded-lg">
          Formulario bloqueado
        </span>
      <% } %>
    </div>

    <div class="space-y-6">
      <% modulos.forEach((modulo) => { %>
        <div class="bg-white rounded-lg shadow-md overflow-hidden">
          <div class="bg-gradient-to-r from-indigo-500 to-purple-500 text-white p-5">
            <h2 class="text-xl font-bold"><%= modulo.titulo %></h2>
            <% if (modulo.descripcion) { %>
              <p class="text-indigo-100 text-sm mt-1"><%= modulo.descripcion %></p>
            <% } %>
          </div>

          <div class="p-6 space-y-6">
            <% modulo.preguntas.forEach((pregunta, idx) => { %>
              <div class="border-b border-gray-200 pb-6 last:border-0">
                <h3 class="font-semibold text-gray-800 mb-3"><%= idx + 1 %>. <%= pregunta.enunciado %></h3>
                
                <div class="space-y-2">
                  <% pregunta.opciones.forEach(opcion => { %>
                    <label class="radio-option block border-2 border-gray-200 rounded-lg p-4 <%= pregunta.respuesta && pregunta.respuesta.opcion_id === opcion.id ? 'selected' : '' %>">
                      <div class="flex items-center">
                        <input type="radio" name="pregunta_<%= pregunta.id %>" value="<%= opcion.id %>"
                          class="h-4 w-4 text-indigo-600"
                          <%= pregunta.respuesta && pregunta.respuesta.opcion_id === opcion.id ? 'checked' : '' %>
                          <%= puedeEditar ? '' : 'disabled' %>
                          onchange="guardarRespuesta(<%= pregunta.id %>, <%= opcion.id %>)">
                        <span class="ml-3 flex-1 text-gray-700 font-medium"><%= opcion.etiqueta %></span>
                        <% if (opcion.puntos !== null) { %>
                          <span class="ml-2 text-sm text-gray-500"><%= opcion.puntos %> pts</span>
                        <% } else { %>
                          <span class="ml-2 text-sm text-gray-400 italic">N/A</span>
                        <% } %>
                      </div>
                    </label>
                  <% }); %>
                </div>
              </div>
            <% }); %>

            <div class="bg-gray-50 rounded-lg p-4">
              <label class="block text-sm font-medium text-gray-700 mb-2">Comentarios adicionales</label>
              <textarea id="justificacion_<%= modulo.id %>" rows="4" 
                class="w-full border border-gray-300 rounded-lg px-3 py-2"
                placeholder="Agrega observaciones sobre este módulo..."
                <%= puedeEditar ? '' : 'disabled' %>
                onchange="guardarJustificacion(<%= modulo.id %>)"><%= modulo.justificacion ? modulo.justificacion.texto : '' %></textarea>
            </div>

            <div class="bg-gray-50 rounded-lg p-4">
              <label class="block text-sm font-medium text-gray-700 mb-3">Imágenes (opcional)</label>
              
              <div id="imagenes_<%= modulo.id %>" class="flex flex-wrap gap-3 mb-4">
                <% modulo.imagenes.forEach(img => { %>
                  <div class="relative">
                    <img src="<%= img.url %>" alt="Imagen" class="w-32 h-32 object-cover rounded border">
                    <% if (puedeEditar) { %>
                      <button onclick="eliminarImagen(<%= img.id %>, <%= modulo.id %>)" 
                        class="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-xs">×</button>
                    <% } %>
                  </div>
                <% }); %>
              </div>

              <% if (puedeEditar) { %>
                <input type="file" id="upload_<%= modulo.id %>" accept="image/*" class="hidden" onchange="subirImagen(<%= modulo.id %>)">
                <button type="button" onclick="document.getElementById('upload_<%= modulo.id %>').click()"
                  class="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 text-sm">
                  Subir imagen
                </button>
              <% } %>
            </div>
          </div>
        </div>
      <% }); %>
    </div>

    <% if (puedeEditar) { %>
      <div class="mt-8 flex justify-between bg-white rounded-lg shadow-md p-6">
        <button onclick="guardarBorrador()" class="bg-gray-600 text-white px-6 py-3 rounded-lg hover:bg-gray-700 font-medium">
          Guardar Borrador
        </button>
        <button onclick="enviarFormulario()" class="bg-gradient-to-r from-indigo-600 to-purple-600 text-white px-8 py-3 rounded-lg hover:from-indigo-700 hover:to-purple-700 font-medium shadow-lg">
          Enviar Evaluación
        </button>
      </div>
    <% } %>
  </div>

  <script>
    const slug = '<%= asignacion.shopper_slug %>';
    const puedeEditar = <%= puedeEditar %>;

    async function guardarRespuesta(preguntaId, opcionId) {
      if (!puedeEditar) return;
      try {
        await fetch(`/s/${slug}/respuestas`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ respuestas: [{ preguntaId, opcionId }] })
        });
      } catch (error) {
        console.error('Error:', error);
      }
    }

    async function guardarJustificacion(moduloId) {
      if (!puedeEditar) return;
      const texto = document.getElementById(`justificacion_${moduloId}`).value;
      try {
        await fetch(`/s/${slug}/modulos/${moduloId}/justificacion`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ texto })
        });
      } catch (error) {
        console.error('Error:', error);
      }
    }

    async function subirImagen(moduloId) {
      const input = document.getElementById(`upload_${moduloId}`);
      const file = input.files[0];
      if (!file) return;
      
      const formData = new FormData();
      formData.append('image', file);
      
      try {
        const response = await fetch(`/s/${slug}/upload/${moduloId}`, {
          method: 'POST',
          body: formData
        });
        if (response.ok) {
          alert('Imagen subida correctamente');
          location.reload();
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error al subir imagen');
      }
    }

    async function eliminarImagen(mediaId, moduloId) {
      if (!confirm('¿Eliminar esta imagen?')) return;
      try {
        const response = await fetch(`/s/${slug}/media/${mediaId}`, { method: 'DELETE' });
        if (response.ok) location.reload();
      } catch (error) {
        console.error('Error:', error);
      }
    }

    async function guardarBorrador() {
      const respuestas = [];
      document.querySelectorAll('input[type="radio"]:checked').forEach(radio => {
        const preguntaId = parseInt(radio.name.split('_')[1]);
        const opcionId = parseInt(radio.value);
        respuestas.push({ preguntaId, opcionId });
      });
      
      try {
        await fetch(`/s/${slug}/respuestas`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ respuestas })
        });
        alert('Borrador guardado');
      } catch (error) {
        alert('Error al guardar');
      }
    }

    async function enviarFormulario() {
      if (!confirm('¿Enviar la evaluación? No podrás editarla después.')) return;
      try {
        const response = await fetch(`/s/${slug}/enviar`, { method: 'POST' });
        if (response.ok) {
          alert('¡Evaluación enviada correctamente!');
          location.reload();
        }
      } catch (error) {
        alert('Error al enviar');
      }
    }

    document.querySelectorAll('.radio-option').forEach(label => {
      label.addEventListener('click', () => {
        const input = label.querySelector('input');
        const preguntaId = input.name;
        document.querySelectorAll(`input[name="${preguntaId}"]`).forEach(r => {
          r.closest('.radio-option').classList.remove('selected');
        });
        label.classList.add('selected');
      });
    });
  </script>
</body>
</html>
